{
  "version": 3,
  "sources": ["../../pandemonium/random.js", "../../pandemonium/shuffle-in-place.js", "../../graphology-layout/circlepack.js", "../../graphology-layout/circular.js", "../../graphology-layout/random.js", "../../graphology-layout/rotation.js", "../../graphology-layout/index.js"],
  "sourcesContent": ["/**\n * Pandemonium Random\n * ===================\n *\n * Random function.\n */\n\n/**\n * Creating a function returning a random integer such as a <= N <= b.\n *\n * @param  {function} rng - RNG function returning uniform random.\n * @return {function}     - The created function.\n */\nfunction createRandom(rng) {\n  /**\n   * Random function.\n   *\n   * @param  {number} a - From.\n   * @param  {number} b - To.\n   * @return {number}\n   */\n  return function (a, b) {\n    return a + Math.floor(rng() * (b - a + 1));\n  };\n}\n\n/**\n * Default random using `Math.random`.\n */\nvar random = createRandom(Math.random);\n\n/**\n * Exporting.\n */\nrandom.createRandom = createRandom;\nmodule.exports = random;\n", "/**\n * Pandemonium Shuffle In Place\n * =============================\n *\n * Shuffle function applying the Fisher-Yates algorithm to the provided array.\n */\nvar createRandom = require('./random.js').createRandom;\n\n/**\n * Creating a function returning the given array shuffled.\n *\n * @param  {function} rng - The RNG to use.\n * @return {function}     - The created function.\n */\nfunction createShuffleInPlace(rng) {\n  var customRandom = createRandom(rng);\n\n  /**\n   * Function returning the shuffled array.\n   *\n   * @param  {array}  sequence - Target sequence.\n   * @return {array}           - The shuffled sequence.\n   */\n  return function (sequence) {\n    var length = sequence.length,\n      lastIndex = length - 1;\n\n    var index = -1;\n\n    while (++index < length) {\n      var r = customRandom(index, lastIndex),\n        value = sequence[r];\n\n      sequence[r] = sequence[index];\n      sequence[index] = value;\n    }\n  };\n}\n\n/**\n * Default shuffle in place using `Math.random`.\n */\nvar shuffleInPlace = createShuffleInPlace(Math.random);\n\n/**\n * Exporting.\n */\nshuffleInPlace.createShuffleInPlace = createShuffleInPlace;\nmodule.exports = shuffleInPlace;\n", "/**\n * Graphology CirclePack Layout\n * =============================\n *\n * Circlepack layout from d3-hierarchy/gephi.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\nvar shuffle = require('pandemonium/shuffle-in-place');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  attributes: {\n    x: 'x',\n    y: 'y'\n  },\n  center: 0,\n  hierarchyAttributes: [],\n  rng: Math.random,\n  scale: 1\n};\n\n/**\n * Helpers.\n */\nfunction CircleWrap(id, x, y, r, circleWrap) {\n  this.wrappedCircle = circleWrap || null; //hacky d3 reference thing\n\n  this.children = {};\n  this.countChildren = 0;\n  this.id = id || null;\n  this.next = null;\n  this.previous = null;\n\n  this.x = x || null;\n  this.y = y || null;\n  if (circleWrap) this.r = 1010101;\n  // for debugging purposes - should not be used in this case\n  else this.r = r || 999;\n}\n\nCircleWrap.prototype.hasChildren = function () {\n  return this.countChildren > 0;\n};\n\nCircleWrap.prototype.addChild = function (id, child) {\n  this.children[id] = child;\n  ++this.countChildren;\n};\n\nCircleWrap.prototype.getChild = function (id) {\n  if (!this.children.hasOwnProperty(id)) {\n    var circleWrap = new CircleWrap();\n    this.children[id] = circleWrap;\n    ++this.countChildren;\n  }\n  return this.children[id];\n};\n\nCircleWrap.prototype.applyPositionToChildren = function () {\n  if (this.hasChildren()) {\n    var root = this; // using 'this' in Object.keys.forEach seems a bad idea\n    for (var key in root.children) {\n      var child = root.children[key];\n      child.x += root.x;\n      child.y += root.y;\n      child.applyPositionToChildren();\n    }\n  }\n};\n\nfunction setNode(/*Graph*/ graph, /*CircleWrap*/ parentCircle, /*Map*/ posMap) {\n  for (var key in parentCircle.children) {\n    var circle = parentCircle.children[key];\n    if (circle.hasChildren()) {\n      setNode(graph, circle, posMap);\n    } else {\n      posMap[circle.id] = {x: circle.x, y: circle.y};\n    }\n  }\n}\n\nfunction enclosesNot(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r - b.r;\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r - b.r + 1e-6;\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(/*CircleWrap*/ a, /*Array<CircleWrap>*/ B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis1(/*CircleWrap*/ a) {\n  return new CircleWrap(null, a.x, a.y, a.r);\n}\n\nfunction encloseBasis2(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x21 = x2 - x1,\n    y21 = y2 - y1,\n    r21 = r2 - r1,\n    l = Math.sqrt(x21 * x21 + y21 * y21);\n  return new CircleWrap(\n    null,\n    (x1 + x2 + (x21 / l) * r21) / 2,\n    (y1 + y2 + (y21 / l) * r21) / 2,\n    (l + r1 + r2) / 2\n  );\n}\n\nfunction encloseBasis3(/*CircleWrap*/ a, /*CircleWrap*/ b, /*CircleWrap*/ c) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x3 = c.x,\n    y3 = c.y,\n    r3 = c.r,\n    a2 = x1 - x2,\n    a3 = x1 - x3,\n    b2 = y1 - y2,\n    b3 = y1 - y3,\n    c2 = r2 - r1,\n    c3 = r3 - r1,\n    d1 = x1 * x1 + y1 * y1 - r1 * r1,\n    d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n    d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n    ab = a3 * b2 - a2 * b3,\n    xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n    xb = (b3 * c2 - b2 * c3) / ab,\n    ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n    yb = (a2 * c3 - a3 * c2) / ab,\n    A = xb * xb + yb * yb - 1,\n    B = 2 * (r1 + xa * xb + ya * yb),\n    C = xa * xa + ya * ya - r1 * r1,\n    r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return new CircleWrap(null, x1 + xa + xb * r, y1 + ya + yb * r, r);\n}\n\nfunction encloseBasis(/*Array<CircleWrap>*/ B) {\n  switch (B.length) {\n    case 1:\n      return encloseBasis1(B[0]);\n    case 2:\n      return encloseBasis2(B[0], B[1]);\n    case 3:\n      return encloseBasis3(B[0], B[1], B[2]);\n    default:\n      throw new Error(\n        'graphology-layout/circlepack: Invalid basis length ' + B.length\n      );\n  }\n}\n\nfunction extendBasis(/*Array<CircleWrap>*/ B, /*CircleWrap*/ p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (\n        enclosesNot(encloseBasis2(B[i], B[j]), p) &&\n        enclosesNot(encloseBasis2(B[i], p), B[j]) &&\n        enclosesNot(encloseBasis2(B[j], p), B[i]) &&\n        enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)\n      ) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error('graphology-layout/circlepack: extendBasis failure !');\n}\n\nfunction score(/*CircleWrap*/ node) {\n  var a = node.wrappedCircle;\n  var b = node.next.wrappedCircle;\n  var ab = a.r + b.r;\n  var dx = (a.x * b.r + b.x * a.r) / ab;\n  var dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction enclose(circles, shuffleFunc) {\n  var i = 0;\n  var circlesLoc = circles.slice();\n\n  var n = circles.length;\n  var B = [];\n  var p;\n  var e;\n  shuffleFunc(circlesLoc);\n  while (i < n) {\n    p = circlesLoc[i];\n    if (e && enclosesWeak(e, p)) {\n      ++i;\n    } else {\n      B = extendBasis(B, p);\n      e = encloseBasis(B);\n      i = 0;\n    }\n  }\n  return e;\n}\n\nfunction place(/*CircleWrap*/ b, /*CircleWrap*/ a, /*CircleWrap*/ c) {\n  var dx = b.x - a.x,\n    x,\n    a2,\n    dy = b.y - a.y,\n    y,\n    b2,\n    d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r;\n    a2 *= a2;\n    b2 = b.r + c.r;\n    b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r + b.r - 1e-6,\n    dx = b.x - a.x,\n    dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction packEnclose(/*Array<CircleWrap>*/ circles, shuffleFunc) {\n  var n = circles.length;\n  if (n === 0) return 0;\n\n  var a, b, c, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0];\n  a.x = 0;\n  a.y = 0;\n  if (n <= 1) return a.r;\n\n  // Place the second circle.\n  b = circles[1];\n  a.x = -b.r;\n  b.x = a.r;\n  b.y = 0;\n  if (n <= 2) return a.r + b.r;\n\n  // Place the third circle.\n  c = circles[2];\n  place(b, a, c);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new CircleWrap(null, null, null, null, a);\n  b = new CircleWrap(null, null, null, null, b);\n  c = new CircleWrap(null, null, null, null, c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    c = circles[i];\n    place(a.wrappedCircle, b.wrappedCircle, c);\n    c = new CircleWrap(null, null, null, null, c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next;\n    k = a.previous;\n    sj = b.wrappedCircle.r;\n    sk = a.wrappedCircle.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j.wrappedCircle, c.wrappedCircle)) {\n          b = j;\n          a.next = b;\n          b.previous = a;\n          --i;\n          continue pack;\n        }\n        sj += j.wrappedCircle.r;\n        j = j.next;\n      } else {\n        if (intersects(k.wrappedCircle, c.wrappedCircle)) {\n          a = k;\n          a.next = b;\n          b.previous = a;\n          --i;\n          continue pack;\n        }\n        sk += k.wrappedCircle.r;\n        k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a;\n    c.next = b;\n    a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c;\n        aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b.wrappedCircle];\n  c = b;\n  var safety = 10000;\n  while ((c = c.next) !== b) {\n    if (--safety === 0) {\n      break;\n    }\n    a.push(c.wrappedCircle);\n  }\n  c = enclose(a, shuffleFunc);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) {\n    a = circles[i];\n    a.x -= c.x;\n    a.y -= c.y;\n  }\n  return c.r;\n}\n\nfunction packHierarchy(/*CircleWrap*/ parentCircle, shuffleFunc) {\n  var r = 0;\n  if (parentCircle.hasChildren()) {\n    //pack the children first because the radius is determined by how the children get packed (recursive)\n    for (var key in parentCircle.children) {\n      var circle = parentCircle.children[key];\n      if (circle.hasChildren()) {\n        circle.r = packHierarchy(circle, shuffleFunc);\n      }\n    }\n    //now that each circle has a radius set by its children, pack the circles at this level\n    r = packEnclose(Object.values(parentCircle.children), shuffleFunc);\n  }\n  return r;\n}\n\nfunction packHierarchyAndShift(/*CircleWrap*/ parentCircle, shuffleFunc) {\n  packHierarchy(parentCircle, shuffleFunc);\n  for (var key in parentCircle.children) {\n    var circle = parentCircle.children[key];\n    circle.applyPositionToChildren();\n  }\n}\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph                   - Target  graph.\n * @param  {object}   [options]               - Options:\n * @param  {object}     [attributes]          - Attributes names to map.\n * @param  {number}     [center]              - Center of the layout.\n * @param  {string[]}   [hierarchyAttributes] - List of attributes used for the layout in decreasing order.\n * @param  {function}   [rng]                 - Custom RNG function to be used.\n * @param  {number}     [scale]               - Scale of the layout.\n * @return {object}                           - The positions by node.\n */\nfunction genericCirclePackLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/circlepack: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var posMap = {},\n    positions = {},\n    nodes = graph.nodes(),\n    center = options.center,\n    hierarchyAttributes = options.hierarchyAttributes,\n    shuffleFunc = shuffle.createShuffleInPlace(options.rng),\n    scale = options.scale;\n\n  var container = new CircleWrap();\n\n  graph.forEachNode(function (key, attributes) {\n    var r = attributes.size ? attributes.size : 1;\n    var newCircleWrap = new CircleWrap(key, null, null, r);\n    var parentContainer = container;\n\n    hierarchyAttributes.forEach(function (v) {\n      var attr = attributes[v];\n      parentContainer = parentContainer.getChild(attr);\n    });\n\n    parentContainer.addChild(key, newCircleWrap);\n  });\n  packHierarchyAndShift(container, shuffleFunc);\n  setNode(graph, container, posMap);\n  var l = nodes.length,\n    x,\n    y,\n    i;\n  for (i = 0; i < l; i++) {\n    var node = nodes[i];\n\n    x = center + scale * posMap[node].x;\n    y = center + scale * posMap[node].y;\n\n    positions[node] = {\n      x: x,\n      y: y\n    };\n\n    if (assign) {\n      graph.setNodeAttribute(node, options.attributes.x, x);\n      graph.setNodeAttribute(node, options.attributes.y, y);\n    }\n  }\n  return positions;\n}\n\nvar circlePackLayout = genericCirclePackLayout.bind(null, false);\ncirclePackLayout.assign = genericCirclePackLayout.bind(null, true);\n\nmodule.exports = circlePackLayout;\n", "/**\n * Graphology Circular Layout\n * ===========================\n *\n * Layout arranging the nodes in a circle.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {object}     [attributes] - Attributes names to map.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericCircularLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/random: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length !== 2)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  var center = options.center;\n  var scale = options.scale;\n  var tau = Math.PI * 2;\n\n  var offset = (center - 0.5) * scale;\n  var l = graph.order;\n\n  var x = dimensions[0];\n  var y = dimensions[1];\n\n  function assignPosition(i, target) {\n    target[x] = scale * Math.cos((i * tau) / l) + offset;\n    target[y] = scale * Math.sin((i * tau) / l) + offset;\n\n    return target;\n  }\n\n  var i = 0;\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition(i++, {});\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(i++, attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar circularLayout = genericCircularLayout.bind(null, false);\ncircularLayout.assign = genericCircularLayout.bind(null, true);\n\nmodule.exports = circularLayout;\n", "/**\n * Graphology Random Layout\n * =========================\n *\n * Simple layout giving uniform random positions to the nodes.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  rng: Math.random,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {array}      [dimensions] - List of dimensions of the layout.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {function}   [rng]        - Custom RNG function to be used.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericRandomLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/random: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length < 1)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  var d = dimensions.length;\n  var center = options.center;\n  var rng = options.rng;\n  var scale = options.scale;\n\n  var offset = (center - 0.5) * scale;\n\n  function assignPosition(target) {\n    for (var i = 0; i < d; i++) {\n      target[dimensions[i]] = rng() * scale + offset;\n    }\n\n    return target;\n  }\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition({});\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar randomLayout = genericRandomLayout.bind(null, false);\nrandomLayout.assign = genericRandomLayout.bind(null, true);\n\nmodule.exports = randomLayout;\n", "/**\n * Graphology Rotation Layout Helper\n * ==================================\n *\n * Function rotating the coordinates of the graph.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Constants.\n */\nvar RAD_CONVERSION = Math.PI / 180;\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  centeredOnZero: false,\n  degrees: false\n};\n\n/**\n * Abstract function for rotating a graph's coordinates.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {number}   angle          - Rotation angle.\n * @param  {object}   [options]      - Options.\n * @return {object}                  - The positions by node.\n */\nfunction genericRotation(assign, graph, angle, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/rotation: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  if (options.degrees) angle *= RAD_CONVERSION;\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length !== 2)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  // Handling null graph\n  if (graph.order === 0) {\n    if (assign) return;\n\n    return {};\n  }\n\n  var xd = dimensions[0];\n  var yd = dimensions[1];\n\n  var xCenter = 0;\n  var yCenter = 0;\n\n  if (!options.centeredOnZero) {\n    // Finding bounds of the graph\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n\n    graph.forEachNode(function (node, attr) {\n      var x = attr[xd];\n      var y = attr[yd];\n\n      if (x < xMin) xMin = x;\n      if (x > xMax) xMax = x;\n      if (y < yMin) yMin = y;\n      if (y > yMax) yMax = y;\n    });\n\n    xCenter = (xMin + xMax) / 2;\n    yCenter = (yMin + yMax) / 2;\n  }\n\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n\n  function assignPosition(target) {\n    var x = target[xd];\n    var y = target[yd];\n\n    target[xd] = xCenter + (x - xCenter) * cos - (y - yCenter) * sin;\n    target[yd] = yCenter + (x - xCenter) * sin + (y - yCenter) * cos;\n\n    return target;\n  }\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node, attr) {\n      var o = {};\n      o[xd] = attr[xd];\n      o[yd] = attr[yd];\n      positions[node] = assignPosition(o);\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar rotation = genericRotation.bind(null, false);\nrotation.assign = genericRotation.bind(null, true);\n\nmodule.exports = rotation;\n", "/**\n * Graphology Layout\n * ==================\n *\n * Library endpoint.\n */\nexports.circlepack = require('./circlepack.js');\nexports.circular = require('./circular.js');\nexports.random = require('./random.js');\nexports.rotation = require('./rotation.js');\n"],
  "mappings": "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",
  "names": ["i", "require_random"]
}
